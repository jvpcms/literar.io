plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.literario'
version = '0.0.1-SNAPSHOT'
javaVersion = project.hasProperty('javaVersion') ? project.getProperty('javaVersion') : '22'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(javaVersion)
	}
	sourceCompatibility = JavaVersion.toVersion(javaVersion)
	targetCompatibility = JavaVersion.toVersion(javaVersion)
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.projectlombok:lombok:1.18.24' // @Data
	implementation 'io.github.cdimascio:java-dotenv:5.2.2' //Env loader
	implementation 'org.postgresql:postgresql:42.2.23' // Postgres
	// implementation 'org.springframework.boot:spring-boot-starter-security' // Security
  implementation 'org.springframework.security:spring-security-crypto' // Password encoder
	implementation 'io.jsonwebtoken:jjwt:0.9.1' // JWT
	implementation 'javax.xml.bind:jaxb-api:2.3.1' // JAXB API
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
